// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"backend/internal/application"
	"backend/internal/di/client"
	"backend/internal/di/db"
	"backend/internal/di/ginengine"
	user2 "backend/internal/domain/user"
	"backend/internal/infrastructure/user"
	"backend/internal/interface/api/handler"
	"backend/internal/interface/api/middleware"
	"backend/internal/interface/api/router"
	"backend/internal/server"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitializeServer() *server.Server {
	engine := ginengine.New()
	conn := db.NewConnection()
	queries := db.New(conn)
	s3Client := client.NewS3()
	redisClient := client.NewRedis()
	goCloak := client.NewKeycloak()
	repository := user.NewRepository(queries, s3Client, redisClient, goCloak)
	transactor := db.NewTransactor(conn)
	service := user2.NewService(repository, transactor)
	applicationUser := application.NewUser(repository, service)
	handlerUser := handler.NewUser(applicationUser)
	healthCheck := handler.NewHealthCheck(goCloak, redisClient, s3Client, conn)
	metric := middleware.NewMetric()
	logging := middleware.NewLogging()
	category := handler.NewCategory()
	product := handler.NewProduct()
	attribute := handler.NewAttribute()
	payment := handler.NewPayment()
	order := handler.NewOrder()
	handlerReturn := handler.NewReturn()
	refund := handler.NewRefund()
	review := handler.NewReview()
	cart := handler.NewCart()
	routerRouter := router.New(handlerUser, healthCheck, metric, logging, category, product, attribute, payment, order, handlerReturn, refund, review, cart)
	serverServer := server.New(engine, routerRouter)
	return serverServer
}

// wire.go:

var DbSet = wire.NewSet(db.NewConnection, db.New, db.NewTransactor)

var EngineSet = wire.NewSet(ginengine.New)

var RepositorySet = wire.NewSet(user.NewRepository)

var ServiceSet = wire.NewSet(user2.NewService)

var AppSet = wire.NewSet(application.NewUser)

var MiddlewareSet = wire.NewSet(middleware.NewMetric, middleware.NewLogging)

var HandlerSet = wire.NewSet(handler.NewUser, handler.NewHealthCheck, handler.NewCategory, handler.NewProduct, handler.NewAttribute, handler.NewPayment, handler.NewOrder, handler.NewReturn, handler.NewRefund, handler.NewReview, handler.NewCart)

var RouterSet = wire.NewSet(router.New)

var ClientSet = wire.NewSet(client.NewRedis, client.NewS3, client.NewKeycloak)
